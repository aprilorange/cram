[
  {
    q: '介绍一下 CSS 的盒子模型?'
    a: '''
       1. 有两种， IE 盒子模型、标准 W3C 盒子模型；IE的content部分包含了 border 和 pading;

       2. 盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border).
      ''',
    cost: 1
    scores: 5
  }

  {
    q: 'position 的值 relative 和 absolute 定位原点是?'
    a: '''
      **absolute**  
      生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。 

      **fixed (老IE不支持)**  
      生成绝对定位的元素，相对于浏览器窗口进行定位。 

      **relative**  
      生成相对定位的元素，相对于其正常位置进行定位。 

      **static**  
      默认值。没有定位，元素出现在正常的流中
      '''
    cost: 1
    scores: 5
  }

  {
    q: 'CSS Sprite 是什么, 有什么优缺点?'
    a: '''
      概念：将多个小图片拼接到一个图片中。通过background-position和元素尺寸调节需要显示的背景图案。

      优点：

      1. 减少HTTP请求数，极大地提高页面加载速度
      2. 增加图片信息重复度，提高压缩比，减少图片大小
      3. 更换风格方便，只需在一张或几张图片上修改颜色或样式即可实现
      
      缺点：

      1. 图片合并麻烦
      2. 维护麻烦，修改一个图片可能需要从新布局整个图片，样式
      ''' 
    cost: 1
    scores: 5
  }

  {
    q: '清除浮动的推荐做法是?'
    a: '''
      ```css
      .clearfix:after {
        content: '';
        display: block;
        clear: both;
        visibility: hidden;
        height: 0;
      }
      ```
      '''
    cost: 1
    scores: 5
  }

  {
    q: '如何避免外边距折叠? (collapsing margins)'
    a: '''
      毗邻的两个或多个 margin 会合并成一个 margin，叫做外边距折叠。

      只使用 margin-top 或者 margin-bottom 可避免。
      '''
    cost: 1
    scores: 5
  }

  {
    q: '如何水平居中一个元素， 有哪几种情况?'
    a: '''
      ### inline 元素
      在父级元素使用 `text-align:center` 即可

      ### block 元素 
      1. 定义元素宽度
      2. 设置左右 margin 为 auto 

      ### 相对/绝对定位元素 
      1. 定义元素宽度
      2. 设置浮动偏移量 left 或者 right 为 50%
      3. 设置 margin 偏移量 left 或者 right 为元素宽度一半的负值

      ```css
      .position-center {
        position: absolute;
        width: 500px;
        left: 50%;
        margin-left: -250px;
      }
      ```
      '''
    cost: 1
    scores: 10
  }

]